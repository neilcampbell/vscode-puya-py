name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
      - '.idea/**'

  workflow_dispatch:
    inputs:
      production-release:
        description: 'Production release?'
        required: true
        default: 'true'

concurrency: create-release

permissions:
  contents: write
  issues: read

env:
  PRODUCTION_RELEASE: ${{ github.ref_name == 'main' && inputs.production-release == 'true' }}

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ./package-lock.json

      - name: Build and Test (Algorand Python)
        uses: ./.github/actions/build-and-test

      - name: Upload python build output
        if: ${{ github.ref_name == 'main' }}
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: 'packages/python/dist'
          if-no-files-found: error

      - name: Upload typescript build output
        if: ${{ github.ref_name == 'main' }}
        uses: actions/upload-artifact@v4
        with:
          name: typescript-dist
          path: 'packages/typescript/dist'
          if-no-files-found: error

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ./package-lock.json

      - name: Download python build output
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: 'packages/python/dist'

      - name: Download typescript build output
        uses: actions/download-artifact@v4
        with:
          name: typescript-dist
          path: 'packages/typescript/dist'

      - name: Create and publish release
        uses: ./.github/actions/create-release
        id: create-github-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-release: ${{ env.PRODUCTION_RELEASE }}
